# docker-compose down
# docker-compose up -d --build
# docker-compose up --build
# Add-Migration Inicial -Context ExempleAppDbContext 
# Update-Database -Context ExempleAppDbContext

# Add-Migration Inicial -Context PersonAppDbContext 
# Add-Migration InicialPerson -Context PersonAppDbContext 
# Update-Database -Context PersonAppDbContext

# Add-Migration Inicial -Context CustomerAppDbContext 
# Update-Database -Context CustomerAppDbContext

# Criando API nova
# dotnet new webapi -n AuthSystem
# dotnet new webapi -n API.Person

version: '3.4'

networks:
  app-backend:
    driver: bridge

services:
  api.template:
    image: ${DOCKER_REGISTRY-}apitemplate
    restart: always
    build:
      context: .
      dockerfile: src/API/API.Template/Dockerfile
    networks:
      - app-backend
    depends_on:
      - sqlserver
      - kafka1

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=@Poc2Minimal@Api
    networks:
      - app-backend
    volumes:
      - sql_data:/var/opt/mssql

  zookeeper:
    image: bitnami/zookeeper:3.8
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - app-backend

  kafka1:
    image: bitnami/kafka:3.6
    restart: always
    volumes:
      - kafka_data1:/bitnami
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - app-backend

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - 9100:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka1
    networks:
      - app-backend

volumes:
  zookeeper_data:
    driver: local
  kafka_data1:
    driver: local
  sql_data:
    driver: local
